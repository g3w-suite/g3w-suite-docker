COMPOSE_PROJECT_NAME=SOMEPROJECTNAME
# Build Args
DISTRO=ubuntu
IMAGE_VERSION=jammy
QGIS_LTR='-ltr'
INSTALL_MSSQL=false
# Public hostmane
WEBGIS_PUBLIC_HOSTNAME=dev.g3wsuite.it

# Shared volume mount (docker internal: shared-volume)
# I suggest not to use the /tmp/ folder, /tmp/ folder is cleaned at each reboot
WEBGIS_DOCKER_SHARED_VOLUME=./shared-volume

# Docker internal DB
G3WSUITE_POSTGRES_USER_LOCAL=g3wsuite
G3WSUITE_POSTGRES_PASS='89#kL8y3D'
G3WSUITE_POSTGRES_DBNAME=g3wsuite
G3WSUITE_POSTGRES_HOST=postgis
G3WSUITE_POSTGRES_PORT=5432

# Set this to true to activate the frontend module
FRONTEND=False

# QGIS Server env variables
# ----------------------------------------------------
PGSERVICEFILE=/pg_service/pg_service.conf
# Put your pg service into ./scripts/pg_service.conf file, the conf file will be mounted into
# docker container at runtime a the PGSERVICEFILE

QGIS_SERVER_LOG_FILE=/shared_volume/QGIS/error.log
QGIS_SERVER_LOG_LEVEL=2

# Extra QGIS env variables.
# Every QGIS environment variables available as specified on manual
# https://docs.qgis.org/3.22/en/docs/server_manual/config.html#environment-variables
# can be set, important is remember to add thy to `docker-compose.yml` o  `docker-compose-consument.yml`.

# Openrouteservice
# ----------------------------------------------------
#ORS_API_ENDPOINT='https://api.openrouteservice.org/v2'
# Optional, can be blank if the key is not required by the endpoint
#ORS_API_KEY='<your API key goes here>'
# Max number of ranges (it depends on the server configuration)
#ORS_MAX_RANGES=6
# Max number of locations(it depends on the server configuration)
#ORS_MAX_LOCATIONS=2

# Gunicorn settings
# ---------------------------------------------------------
# Timeout for Gunicorn instances. In some cases you may consider increasing this value to 240 or higher to prevent 502 errors in nginx.
G3WSUITE_GUNICORN_TIMEOUT=120

# *Important*: remember to add this env vars also to docker-compose.yml or
# docker-compose-consumer.yml
