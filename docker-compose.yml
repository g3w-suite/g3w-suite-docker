## HOW TO RUN: ##
#
# docker compose -f docker-compose.yml up -d
#
version: "3.4"

x-g3w-suite-env: &g3w-suite-env
  - DISPLAY=:99
  - FRONTEND
  - G3WSUITE_GUNICORN_MAX_REQUESTS
  - G3WSUITE_GUNICORN_NUM_WORKERS
  - G3WSUITE_GUNICORN_TIMEOUT
  - G3WSUITE_ORS_API_ENDPOINT
  - G3WSUITE_ORS_API_KEY
  - G3WSUITE_POSTGRES_DBNAME
  - G3WSUITE_POSTGRES_USER
  - G3WSUITE_POSTGRES_USER_LOCAL
  - G3WSUITE_POSTGRES_PASS
  - G3WSUITE_POSTGRES_HOST
  - G3WSUITE_POSTGRES_PORT
  - G3WSUITE_TILECACHE_PATH
  - PGSERVICEFILE
  - G3WSUITE_RUN_HUEY
  - QGIS_OPTIONS_PATH=/shared-volume/
  - QGIS_SERVER_LOG_FILE
  - QGIS_SERVER_LOG_LEVEL
  - QGIS_SERVER_PARALLEL_RENDERING=1
  - TILESTACHE_CACHE_BUFFER_SIZE
  - TILESTACHE_CACHE_TOKEN

x-g3w-suite-vol: &g3w-suite-vol
  - ${WEBGIS_DOCKER_SHARED_VOLUME}:/shared-volume
  - ${WEBGIS_DOCKER_SHARED_VOLUME}/node_modules:/code/node_modules
  - ./config/g3w-suite/overrides/static:/code/static:ro
  - ./config/g3w-suite/overrides/templates:/code/templates:ro
  - ./config/g3w-suite/settings_docker.py:/code/g3w-admin/base/settings/local_settings.py
  - ./secrets/pg_service.conf:${PGSERVICEFILE}
  - ./config/qgis/QGIS3.ini:/shared-volume/QGIS/QGIS3.ini

x-g3w-suite-logging: &g3w-suite-logging
  driver: "json-file"
  options:
    max-size: "200k"
    max-file: "10"

services:
  postgis:
    image: g3wsuite/postgis:11.0-2.5
    ports:
      - "5439:5432"
    environment:
      - POSTGRES_DBNAME=${G3WSUITE_POSTGRES_DBNAME},data_testing,data_production
      - POSTGRES_USER=${G3WSUITE_POSTGRES_USER_LOCAL}
      - POSTGRES_PASS=${G3WSUITE_POSTGRES_PASS}
      - ALLOW_IP_RANGE=0.0.0.0/0
    restart: on-failure
    logging:
      *g3w-suite-logging
    volumes:
      - ${WEBGIS_DOCKER_SHARED_VOLUME}:/var/lib/postgresql
    healthcheck:
      interval: 60s
      timeout: 30s
      retries: 3
      test: "pg_isready"
    networks:
      internal:
        aliases:
          - ${WEBGIS_PUBLIC_HOSTNAME}

  g3w-suite:
    image: g3wsuite/g3w-suite:dev
    environment:
      *g3w-suite-env
    expose:
      - "8000"
    restart: always
    logging:
      *g3w-suite-logging
    depends_on:
      - postgis
    volumes:
      *g3w-suite-vol
    networks:
      internal:

  redis:
    image: redis:latest
    expose:
    - 6379
    networks:
      internal:

  # Asynchronous tasks consumer (run_huey)
  g3w-suite-consumer:
    image: g3wsuite/g3w-suite:dev
    environment:
      *g3w-suite-env
    restart: always
    logging:
      *g3w-suite-logging
    entrypoint: /scripts/docker-consumer-entrypoint.sh
    depends_on:
      - g3w-suite
      - redis
    volumes:
      *g3w-suite-vol
    networks:
      internal:

  nginx:
    image: nginx
    ports:
      - "8080:8080"
      - "443:443"
    expose:
      - "8080"
    volumes:
      - ${WEBGIS_DOCKER_SHARED_VOLUME}:/shared-volume
      - ${WEBGIS_DOCKER_SHARED_VOLUME}/var/www/.well-known:/var/www/.well-known
      - ${WEBGIS_DOCKER_SHARED_VOLUME}/certs/letsencrypt:/etc/letsencrypt:ro
      - ./config/nginx:/etc/nginx/conf.d:ro
    logging:
      *g3w-suite-logging
    restart: always
    networks:
      internal:

  # Letsencrypt certs
  certbot:
    image: certbot/certbot
    volumes:
      - ${WEBGIS_DOCKER_SHARED_VOLUME}/var/www/certbot:/var/www/certbot
      - ${WEBGIS_DOCKER_SHARED_VOLUME}/certs/letsencrypt:/etc/letsencrypt

volumes:
  shared-volume:
  g3wsuite-pg-data:

networks:
  internal: